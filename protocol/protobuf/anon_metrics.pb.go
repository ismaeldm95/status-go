// Code generated by protoc-gen-go. DO NOT EDIT.
// source: anon_metrics.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// AnonymousMetric represents a single metric data point
type AnonymousMetric struct {
	// id is the unique id of the metric message
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// event is the app metric event type
	Event string `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	// value is a filtered and validated raw json payload attached to the event
	Value []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	// app_version is the version of the `status-react` app that the metric came from
	AppVersion string `protobuf:"bytes,4,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	// os is the operating system of the device the application is installed on
	Os string `protobuf:"bytes,5,opt,name=os,proto3" json:"os,omitempty"`
	// session_id is the id of the session the metric was recorded in
	SessionId string `protobuf:"bytes,6,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// created_at is the datetime at which the metric was stored in the local db
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AnonymousMetric) Reset()         { *m = AnonymousMetric{} }
func (m *AnonymousMetric) String() string { return proto.CompactTextString(m) }
func (*AnonymousMetric) ProtoMessage()    {}
func (*AnonymousMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_4be044a92fa0408c, []int{0}
}

func (m *AnonymousMetric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnonymousMetric.Unmarshal(m, b)
}
func (m *AnonymousMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnonymousMetric.Marshal(b, m, deterministic)
}
func (m *AnonymousMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnonymousMetric.Merge(m, src)
}
func (m *AnonymousMetric) XXX_Size() int {
	return xxx_messageInfo_AnonymousMetric.Size(m)
}
func (m *AnonymousMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_AnonymousMetric.DiscardUnknown(m)
}

var xxx_messageInfo_AnonymousMetric proto.InternalMessageInfo

func (m *AnonymousMetric) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AnonymousMetric) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *AnonymousMetric) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *AnonymousMetric) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *AnonymousMetric) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *AnonymousMetric) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *AnonymousMetric) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

// AnonymousMetricBatch represents a batch of AnonymousMetrics allowing broadcast of AnonymousMetrics with fewer messages
type AnonymousMetricBatch struct {
	// metrics is an array of AnonymousMetric metrics
	Metrics              []*AnonymousMetric `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AnonymousMetricBatch) Reset()         { *m = AnonymousMetricBatch{} }
func (m *AnonymousMetricBatch) String() string { return proto.CompactTextString(m) }
func (*AnonymousMetricBatch) ProtoMessage()    {}
func (*AnonymousMetricBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_4be044a92fa0408c, []int{1}
}

func (m *AnonymousMetricBatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnonymousMetricBatch.Unmarshal(m, b)
}
func (m *AnonymousMetricBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnonymousMetricBatch.Marshal(b, m, deterministic)
}
func (m *AnonymousMetricBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnonymousMetricBatch.Merge(m, src)
}
func (m *AnonymousMetricBatch) XXX_Size() int {
	return xxx_messageInfo_AnonymousMetricBatch.Size(m)
}
func (m *AnonymousMetricBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_AnonymousMetricBatch.DiscardUnknown(m)
}

var xxx_messageInfo_AnonymousMetricBatch proto.InternalMessageInfo

func (m *AnonymousMetricBatch) GetMetrics() []*AnonymousMetric {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func init() {
	proto.RegisterType((*AnonymousMetric)(nil), "protobuf.AnonymousMetric")
	proto.RegisterType((*AnonymousMetricBatch)(nil), "protobuf.AnonymousMetricBatch")
}

func init() {
	proto.RegisterFile("anon_metrics.proto", fileDescriptor_4be044a92fa0408c)
}

var fileDescriptor_4be044a92fa0408c = []byte{
	// 258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xb1, 0x6a, 0xc3, 0x30,
	0x10, 0x86, 0x91, 0xd3, 0x24, 0xf5, 0xb9, 0xb4, 0x20, 0x32, 0xa8, 0x81, 0x12, 0x93, 0xc9, 0x93,
	0x03, 0xc9, 0xd4, 0x31, 0xdd, 0x4a, 0xe9, 0x62, 0x4a, 0x57, 0xa3, 0xd8, 0xd7, 0x54, 0x10, 0xeb,
	0x84, 0x25, 0x1b, 0xfa, 0xa6, 0x7d, 0x9c, 0x62, 0xc9, 0xa6, 0x90, 0x49, 0xdc, 0xa7, 0xff, 0x7e,
	0xf8, 0x0e, 0xb8, 0xd4, 0xa4, 0xcb, 0x06, 0x5d, 0xab, 0x2a, 0x9b, 0x9b, 0x96, 0x1c, 0xf1, 0x5b,
	0xff, 0x9c, 0xba, 0xaf, 0xf5, 0xe6, 0x4c, 0x74, 0xbe, 0xe0, 0x6e, 0x02, 0x3b, 0xa7, 0x1a, 0xb4,
	0x4e, 0x36, 0x26, 0x44, 0xb7, 0xbf, 0x0c, 0x1e, 0x8e, 0x9a, 0xf4, 0x4f, 0x43, 0x9d, 0x7d, 0xf7,
	0x2d, 0xfc, 0x1e, 0x22, 0x55, 0x0b, 0x96, 0xb2, 0x2c, 0x2e, 0x22, 0x55, 0xf3, 0x15, 0xcc, 0xb1,
	0x47, 0xed, 0x44, 0xe4, 0x51, 0x18, 0x06, 0xda, 0xcb, 0x4b, 0x87, 0x62, 0x96, 0xb2, 0xec, 0xae,
	0x08, 0x03, 0xdf, 0x40, 0x22, 0x8d, 0x29, 0x7b, 0x6c, 0xad, 0x22, 0x2d, 0x6e, 0xfc, 0x06, 0x48,
	0x63, 0x3e, 0x03, 0x19, 0xca, 0xc9, 0x8a, 0x79, 0x28, 0x27, 0xcb, 0x9f, 0x00, 0x2c, 0xda, 0xe1,
	0xab, 0x54, 0xb5, 0x58, 0x78, 0x1e, 0x8f, 0xe4, 0xb5, 0xe6, 0xcf, 0x00, 0x55, 0x8b, 0xd2, 0x61,
	0x5d, 0x4a, 0x27, 0x96, 0x29, 0xcb, 0x92, 0xfd, 0x3a, 0x0f, 0x56, 0xf9, 0x64, 0x95, 0x7f, 0x4c,
	0x56, 0x45, 0x3c, 0xa6, 0x8f, 0x6e, 0xfb, 0x06, 0xab, 0x2b, 0xb3, 0x17, 0xe9, 0xaa, 0x6f, 0x7e,
	0x80, 0xe5, 0x78, 0x2e, 0xc1, 0xd2, 0x59, 0x96, 0xec, 0x1f, 0xff, 0x8b, 0xae, 0x16, 0x8a, 0x29,
	0x79, 0x5a, 0xf8, 0xc8, 0xe1, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x9e, 0x48, 0x9c, 0xe6, 0x6f, 0x01,
	0x00, 0x00,
}
